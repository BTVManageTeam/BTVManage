<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
    http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<!--配置jdbc.properties文件的位置信息 -->
	<!-- <bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:jdbc.properties" />
	</bean> -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:mongodb.properties</value>
			</list>
		</property>
	</bean>
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
	  <property name="corePoolSize" value="2" /> 
	  <property name="maxPoolSize" value="10" /> 
	  <property name="queueCapacity" value="30" />
	</bean>
	
	<!-- dbcp 配置DataSource数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${dbdriver}" />
		<property name="url" value="${dburl}" />
		<property name="username" value="${dbuser}" />
		<property name="password" value="${dbpassword}" />
		<!-- 数据库连接池配置 -->
		<property name="initialSize" value="${dbinitialSize}" /><!-- 初始化连接数量 -->
		<property name="maxActive" value="${dbmaxActive}" /><!-- 最大连接数量 -->
		<property name="maxIdle" value="${dbmaxIdle}" /><!-- 最大空闲连接数量 -->
		<property name="minIdle" value="${dbminIdle}" /><!-- 最小空闲连接数量 -->
		<property name="validationQuery" value="select count(*) from dual" />
		<!-- SQL查询,用来验证从连接池取出的连接,在将连接返回给调用者之前 -->
		<property name="testOnBorrow" value="true" />
		<!-- 指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个. -->
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:sqlMapConfig.xml"></property>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.cdvcloud.rochecloud.mapper" />
	</bean>
	<context:component-scan base-package="com.cdvcloud.rochecloud">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	<!--事务相关控制 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="saveTemp*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
	<!--把事务控制在Service层 -->
	<aop:config>
		<aop:pointcut id="pc"
			expression="execution(public * com.cdvcloud.rochecloud.service.*.*(..))" />
		<aop:advisor pointcut-ref="pc" advice-ref="txAdvice" />
	</aop:config>
	<bean id="springUtil" class="com.cdvcloud.rochecloud.util.SpringUtil" />
</beans>